version: "3.8"

services:
  # Backend service (FastAPI)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: pdf-converter-backend
    environment:
      - NODE_ENV=production
      - PYTHONUNBUFFERED=1
    env_file:
      - ./.env
    volumes:
      - backend_uploads:/app/uploads
      - backend_logs:/app/logs
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - app-network
    # Internal port only - accessed through Caddy

  # Frontend service (React)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: pdf-converter-frontend
    restart: unless-stopped
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--no-verbose",
          "--tries=1",
          "--spider",
          "http://localhost:3000/",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - app-network
    # Internal port only - accessed through Caddy

  # Caddy reverse proxy
  caddy:
    image: caddy:2.7.6-alpine
    container_name: pdf-converter-caddy
    ports:
      - "80:80" # HTTP
      - "443:443" # HTTPS
      - "2019:2019" # Caddy admin API (optional, for debugging)
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile:ro
      - caddy_data:/data
      - caddy_config:/config
    restart: unless-stopped
    depends_on:
      backend:
        condition: service_healthy
      frontend:
        condition: service_healthy
    networks:
      - app-network
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--quiet",
          "--tries=1",
          "--spider",
          "http://localhost:80/health",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  caddy_data:
    driver: local
  caddy_config:
    driver: local
  backend_uploads:
    driver: local
  backend_logs:
    driver: local

networks:
  app-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
